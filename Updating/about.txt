## Differences Between `apply`, `applymap`, `map`, and `replace` in Pandas

### 1. `apply`
- **Works on:** Rows or columns of a DataFrame, or on a Series.
- **Purpose:** Apply a function to an entire row, column, or Series.
- **Use case:** Transform data row-wise, column-wise, or Series-wise.

**Examples:**
```python
import pandas as pd

# Sample DataFrame
df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})

# Apply a function to a Series:
df['A'] = df['A'].apply(lambda x: x ** 2)
print(df)
# Output:
#     A  B
# 0   1  4
# 1   4  5
# 2   9  6

# Apply a function to each row and create a new column:
df['row_sum'] = df.apply(lambda row: row.sum(), axis=1)
print(df)
# Output:
#     A  B  row_sum
# 0   1  4        5
# 1   4  5        9
# 2   9  6       15
